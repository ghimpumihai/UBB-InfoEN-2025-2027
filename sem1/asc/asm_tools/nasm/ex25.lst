     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit, scanf, fopen, fprintf, fclose            
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  extern maximum
    12                                                           
    13                                  segment data use32 class=data
    14 00000000 6D61782E74787400            file_name db "max.txt", 0   ;filename to be created   
    15 00000008 7700                        access_mode db "w", 0   ;file access mode: w - creates an empty file for writing
    16 0000000A FFFFFFFF                    file_descriptor dd -1   ;variable to hold the file descriptor 
    17 0000000E 00000000                    n dd 0   ;variable to read the values
    18 00000012 256400                      format1 db "%d", 0   ;%d <=> a decimal number (base 10)
    19 00000015 257800                      format2 db "%x", 0   ;%x <=> a hexadecimal number (base 16)
    20                                  
    21                                  segment code use32 class=code
    22                                  start:
    23                                      
    24                                      ;call fopen() to create the file
    25                                      ;eax = fopen(file_name, access_mode)
    26 00000000 68[08000000]                push dword access_mode     
    27 00000005 68[00000000]                push dword file_name
    28 0000000A FF15[00000000]              call [fopen]
    29 00000010 83C408                      add esp, 4*2    ;clean-up the stack
    30                                          
    31 00000013 A3[0A000000]                mov [file_descriptor], eax    ;store the file descriptor returned by fopen 
    32                                          
    33 00000018 83F800                      cmp eax, 0    ;check if fopen() has successfully created the file (EAX != 0)
    34 0000001B 7452                        je final    ;if not jump to final
    35                                          
    36 0000001D BB00000000                  mov ebx, 0    ;variabile to hold the maximum
    37                                      
    38                                      repeta:
    39                                      
    40 00000022 68[0E000000]                    push dword n    ;address of n, not value
    41 00000027 68[12000000]                    push dword format1
    42 0000002C FF15[00000000]                  call [scanf]    ;call function scanf for reading 
    43 00000032 83C408                          add esp, 4*2    ;clean-up the stack
    44                                              
    45 00000035 833D[0E000000]00                cmp dword[n], 0    ;check if n is 0
    46 0000003C 740D                            je opreste     ;if it is then jump to opreste
    47                                          
    48 0000003E A1[0E000000]                    mov eax, [n]    ;put n in eax
    49 00000043 50                              push eax    ;push the value on the stack
    50                                          
    51 00000044 E8(00000000)                    call maximum    ;call maximum function
    52                                              
    53 00000049 EBD7                        jmp repeta
    54                                          
    55                                      opreste:
    56                                      
    57                                      ;write to file using fprintf()
    58                                      ;fprintf(file_descriptor, text)
    59 0000004B 53                          push dword ebx
    60 0000004C 68[15000000]                push dword format2
    61 00000051 FF35[0A000000]              push dword [file_descriptor]
    62 00000057 FF15[00000000]              call [fprintf]
    63 0000005D 83C40C                      add esp, 4*3    ;clean-up the stack
    64                                      
    65                                      ;call fclose() to close the file
    66                                      ;fclose(file_descriptor)
    67 00000060 FF35[0A000000]              push dword [file_descriptor]
    68 00000066 FF15[00000000]              call [fclose]
    69 0000006C 83C404                      add esp, 4    ;clean-up the stack
    70                                      
    71                                      final:
    72                                      
    73 0000006F 6A00                        push    dword 0      
    74 00000071 FF15[00000000]              call    [exit]
