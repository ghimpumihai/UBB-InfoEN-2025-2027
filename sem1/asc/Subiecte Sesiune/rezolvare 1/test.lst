     1                                  
     2                                  bits 32
     3                                  
     4                                  global start        
     5                                  
     6                                  extern exit,printf
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11                                  
    12 00000000 78A634123456781228-         sir dd 1234A678h, 12785634h, 1A4D3C28h
    12 00000009 3C4D1A             
    13                                      len equ $-sir
    14 0000000C 00<rept>                    noul_cuvant times len db 0
    15 00000018 256400                      format_print db "%d", 0
    16                                      
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; se pune 0 in fiecare registru
    20 00000000 B800000000                      mov eax, 0
    21 00000005 BB00000000                      mov ebx, 0
    22 0000000A B900000000                      mov ecx, 0
    23 0000000F BA00000000                      mov edx, 0
    24                                          
    25                                          ; in edi se pune adresa sirului in care vom incarca octetii
    26 00000014 FC                              cld
    27 00000015 BE[00000000]                    mov esi, sir
    28 0000001A BF[0C000000]                    mov edi, noul_cuvant
    29 0000001F B903000000                      mov ecx, len/4
    30                                          
    31                                          formare_cuvant:
    32 00000024 66AD                                lodsw       ; in AX avem wordul low
    33 00000026 66C1E808                            shr ax, 8   ; shiftam cu 8 pozitii pentru a avea in bitul high din AH
    34 0000002A AA                                  stosb
    35                                              
    36 0000002B 66AD                                lodsw       ; in AX avem wordul high
    37 0000002D 66C1E808                            shr ax, 8   ; shiftam cu 8 pozitii pentru a avea in bitul high din AH
    38 00000031 AA                                  stosb
    39                                              
    40 00000032 51                                  push ecx
    41 00000033 B910000000                          mov ecx, 16
    42 00000038 66A1[0C000000]                      mov ax, [noul_cuvant]
    43                                              
    44                                              biti_de_1:
    45 0000003E 66D1E8                                  shr ax, 1
    46 00000041 83D200                                  adc edx, 0
    47                                              
    48 00000044 E2F8                                loop biti_de_1
    49                                              
    50 00000046 59                                  pop ecx
    51 00000047 E2DB                            loop formare_cuvant 
    52                                          
    53 00000049 52                              push edx
    54 0000004A 68[18000000]                    push dword format_print
    55 0000004F FF15[00000000]                  call [printf]
    56 00000055 83C408                          add esp, 4*2
    57                                  
    58                                      final:
    59 00000058 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 0000005A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
